.DT
set_wall
$MUDNAME$ room help
set_wall

Name
.SI 5
set_wall - sets information relating to walls
.EI

Syntax
.SI 5
void set_wall( mixed *args );
.EI

Description
.SP 5 5
All locations can have walls which can be climbed up, down or across to
reach other locations.  This function can be used to set the relevant
parameters for the wall, including destinations, climbing difficulties,
climbing messages, locations below this location (locations through
which things fall if they fall from this location) and the location
at the bottom (the location where things end up when they fall).  The
elements of the mixed args array are paired, as for modify_exit, with
the first a string to indicate what information is being set and the
second a mixed variable containing the information.  The indicating
strings and the corresponding information variables are as follows.
.EP

"move"
.SP 5 5
The information variable is a mixed array consisting of four
elements.  The first is a string, which is the direction, typically
"up" or "down", for the move. The second is an integer, which is
the base difficulty (to be compared against a skill bonus) for the
climb if the climber is not carrying anything.  The third is a
string, being the file name of the destination location and the
fourth is a string which is the message (using $N and verb$s) which
is presented to people already in the destination location when the
climber arrives.
.EP

"below"
.SP 5 5
The information variable is a string array consisting of the locations
through which something would fall on its route to the bottom, but not
including the location at the bottom.  Each element is the file name
of one of these locations.
.EP

"bottom"
.SP 5 5
There are a number of possibilities for the information variable in
this case.  If it is simply a string, it is the file name of the
location to which things fall.  If it is an array, then it has two
elements and the first element is the file name of the location to
which things fall.  If the second element of this array is also a
string, then it is the name of a function which is called on the
bottom location, with arguments of what is falling and whence it
fell, and the string that the function returns is the message (using
$N and verb$s) which is present to people already at the bottom
when the falling thing arrives.  If the second element is an integer,
then it is the percentage of blunt damage done to the falling thing if
it is living based on how far it fell and its total weight.
.EP

Examples
.SI 5
In wall_bottom:

set_wall( ({ "move", ({ "up", 50, PATH +"wall_side",
      "$N climb$s up from below to join you." }) }) );

In wall_side:

set_wall( ({ "bottom", ({ PATH +"wall_bottom", 50 }) }) );
set_wall( ({ "move", ({ "down", 50, PATH +"wall_bottom",
      "$N climb$s down from above to join you." }) }) );
set_wall( ({ "move", ({ "up", 150, PATH +"wall_ledge",
      "$N climb$s up from below to join you." }) }) );

In wall_ledge:

set_wall( ({ "bottom", ({ PATH +"wall_bottom", 50 }),
      "below", ({ PATH +"wall_side" }) }) );
set_wall( ({ "move", ({ "down", 100, PATH +"wall_side",
      "$N climb$s down from above to join you." }) }) );
.EI
