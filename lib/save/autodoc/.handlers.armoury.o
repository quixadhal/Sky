#/secure/handlers/autodoc/autodoc_file.c
public_functions (["request_item":({({"object",}),({({"string",}),"word",({"int",}),"percent",}),(["main":({"General item retreival function.  It returns a new itemit handles any sort of item.  The percentage is thepercentage condition in which it is returned.The \"word\" parameter is the name of the requested item, essentiallythe filename without directory and with \"_\"'s changed to \" \"'s. The\"percent\" parameter is used as measure of how good itis compared to a fully functional one. So a 50% dagger is only 50% asgood as a 100% one.<p>The file armoury.h defines the ARMOURY variable.  You need to includethis into your file to use it.  You should include this file anduyse ythis define rather than the full path to the armoury, asotherwise your code could stuff up :)",}),"see":({"/include/armoury.h",}),"param":({"word the name of the item to retreive","percent the percentage condition to be in",}),"example":({"// get a slightly worn long sword and give it to the npc.ARMOURY->request_item(\"long sword\", 85)->move(npc);","// Get a random condition armour.armour = ARMOURY->request_item(\"leather jacket\", random(100));",}),"return":({"the requested object, or 0 on failure",}),]),}),"query_weapons":({({"string","*",}),({}),(["main":({"Returns the current list of known weapons.",}),"return":({"the weapons array",}),]),}),"query_item_filename":({({"string",}),({({"string",}),"item",}),(["main":({"This method returns the absolute filename of an item.",}),"param":({"name the name of the item",}),"return":({"the absolute filename of the item",}),]),}),"get_guttered":({({"object",}),({({"int",}),"percent",}),(["main":({"This method gets a guttered item from the armoury.This is used by the search function in city rooms,and returns a random smaller item from the armoury'srecycled items list.  The condition percentage shouldnot be set too high for guttered items, and has beencapped at 50% for that very reason.",}),"param":({"percent the percentage condition the item should be in",}),"return":({"a guttered object or 0 if there are none",}),]),}),"query_accepting":({({"int",}),({({"string",}),"word",}),(["main":({"This method returns whether or not the armoury is currently acceptingthe specified item for recycling.",}),"param":({"word the name of the object to check",}),"return":({"1 if we are currently accepting the item, 0 if not",}),]),}),"query_ores":({({"string","*",}),({}),(["main":({"Returns the current list of known ores.",}),"return":({"the ores instruments array",}),]),}),"query_guttered":({({"object","*",}),({}),(["main":({"This method returns the list of items that could besearched up from gutters.",}),"return":({"the guttered items list",}),]),}),"recycle_object":({({"int",}),({({"object",}),"ob",}),(["main":({"This method recycles a suitable object.It will call reload_object() on it, and make it available forrequesting from the armoury.",}),"param":({"ob the object to try to recycle",}),"return":({"1 if recycled successfully, 0 if not",}),]),}),"query_hits":({({"int",}),({({"string",}),"word",}),(["main":({"This method returns the recycle hits count for a specific file.",}),"param":({"word the name of the object to get the hits count for",}),"return":({"the hits count",}),]),}),"query_misses":({({"int",}),({({"string",}),"word",}),(["main":({"This method returns the recycle miss count for a specific file.",}),"param":({"word the name of the object to get the misses count for",}),"return":({"the misses count",}),]),}),"query_jewellery":({({"string","*",}),({}),(["main":({"Returns the current list of known jewelley.",}),"return":({"the jewellery array",}),]),}),"query_recycled":({({"object","*",}),({({"string",}),"word",}),(["main":({"This method returns the recycled items for a specific file.",}),"param":({"word the name of the object to get the recycled objects for",}),"return":({"the recycled objects",}),]),}),"query_stationery":({({"string","*",}),({}),(["main":({"Returns the current list of known stationery items.",}),"return":({"the stationery items array",}),]),}),"query_item_list":({({"mapping",}),({}),(["main":({"Returns the current list of all items.",}),"return":({"the items mapping",}),]),}),"query_armour":({({"string","*",}),({}),(["main":({"Returns the current list of known armours.",}),"return":({"the armours array",}),]),}),"query_scabbards":({({"string","*",}),({}),(["main":({"Returns the current list of known scabbards.",}),"return":({"the scabbards array",}),]),}),"query_instruments":({({"string","*",}),({}),(["main":({"Returns the current list of known musical instruments.",}),"return":({"the musical instruments array",}),]),}),"query_clothing":({({"string","*",}),({}),(["main":({"Returns the current list of known clothing.",}),"return":({"the clothing array",}),]),}),])
protected_functions ([])
inherits (["/std/room/basic_room":({}),])
main_docs (["changed":({"Many many, by many people","4/1/97 CeresThe discworld armoury was rewritten by Ceres on 4/1/97 to handlesubdirectories within the standard dirs.","20/06/01 ShaydzRewritten to remove a few annoying bugs, including not being able torequest items that had more than one word.","26/06/02 SandozRemoved all the recycling code, because it will never be reliable,because of properties, effects and whatnot.","06/09/02 SandozAdded stationery and instrument lists, and new recycling code whichwill hopefully work ( gotta love reload_object() :) ).","26/09/02 SandozChanged to only recycle items that have been requested before withrequest_item(), and to only accept an item for recycling if itsmiss count is higher than the number of currently recycled items.",}),"main":({"Keeps track of all the standard armours, weapons and clothing.",}),"index":({"armour","weapon","scabard","clothing","clothes","jewellery","stationery","instruments",}),"author":({"Furball",}),])
define_docs (["O_INSTRUMENT":([]),"SAVE_FILE":([]),"O_JEWELLERY":([]),"O_ARMOUR":([]),"O_ORES":([]),"O_ACCEPT":([]),"O_WEAPON":([]),"CONTAINER":([]),"O_SCABBARD":([]),"MAX_RECYCLE":([]),"O_CLOTHING":([]),"O_STATIONERY":([]),])
includes ([])
class_docs (["item_data":({0,({({"file",({"string",}),}),({"recycled",({"object","*",}),}),({"hits",({"int",}),}),({"misses",({"int",}),}),({"flags",({"int",}),}),}),(["main":({"This class stores all the data for a specific armoury item.",}),"member":({"file the file name of the item","recycled the recycled objects","hits recycle hits","misses recycle misses",}),]),}),])
file_name "/handlers/armoury.c"
last_changed 1200080889
