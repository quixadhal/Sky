#/secure/handlers/autodoc/autodoc_file.c
public_functions (["player_relationships_string":({({"string",}),({({"string",}),"player",}),(["main":({"This method returns the relations that the specified playerhas as a string.  It will return a blank string if the playerhas no relationships.",}),"param":({"player the player to check relationships for",}),]),}),])
protected_functions (["www_family_info_string":({({"string",}),({({"string",}),"name",({"string",}),"person",}),(["main":({"This method returns the family information as a string.",}),"see":({"family_info()",}),"param":({"name the name of the family to show the information about","show_election if non-zero show the election information","person the person who is showing the information",}),"return":({"the family information string, 0 if no information",}),]),}),"www_club_info_string":({({"string",}),({({"string",}),"name",({"int",}),"show_election",({"string",}),"person",}),(["main":({"This method returns the club information as a html string.",}),"see":({"club_info()",}),"param":({"name the name of the club to show the information about","show_election if non-zero show the election information","person the person who is showing the information",}),"return":({"the club information string, 0 if no information",}),]),}),"family_info":({({"int",}),({({"string",}),"name",({"string",}),"person",}),(["main":({"This method prints out the information associated with the family.The stuff printed out here is directly lifted from the family control room.This method is designed to work with add_command().",}),"param":({"name the name of the family to show the information about","show_election if non-zero show the election information","person the person who is showing the information",}),"return":({"1 on success, 0 on failure",}),]),}),"club_info":({({"int",}),({({"string",}),"name",({"int",}),"show_election",({"string",}),"person",}),(["main":({"This method prints out the information associated with the club.The stuff printed out here is directly lifted from the club control room.This method is designed to work with add_command().",}),"param":({"name the name of the club to show the information about","show_election if non-zero show the election information","person the person who is showing the information",}),"return":({"1 on success, 0 on failure",}),]),}),"club_list":({({"int",}),({({"string",}),"person",({"int",}),"print_families",({"function",}),"check_list",}),(["main":({"This method prints out a list of the current clubs.",}),"see":({"club_info()","club_members()","www_club_list()","www_club_info()",}),"param":({"person the person who is doing the listing","print_families 1 print the families, 0 print the clubs","check_list this function is called to see if the club should be listed",}),"return":({"0 on failure and 1 for success",}),]),}),"person_in_control":({({"object",}),({({"object",}),"ob",}),(["main":({"This method returns the player in control of the item.",}),"see":({"club_members()",}),"param":({"ob the item",}),"return":({"the player in control",}),]),}),"www_finger_name":({({"string",}),({({"string",}),"name",}),(["main":({"This method turns a name into a fingerable name.",}),"param":({"name the name to make fingerable",}),"return":({"the htmlised name string",}),]),}),"family_info_string":({({"string",}),({({"string",}),"name",({"string",}),"person",}),(["main":({"This method returns the family information as a string.",}),"see":({"family_info()",}),"param":({"name the name of the family to show the information about","show_election if non-zero show the election information","person the person who is showing the information",}),"return":({"the family information string, 0 if no information",}),]),}),"club_info_string":({({"string",}),({({"string",}),"name",({"int",}),"show_election",({"string",}),"person",}),(["main":({"This method returns the club information as a string.",}),"see":({"club_info()",}),"param":({"name the name of the club to show the information about","show_election if non-zero show the election information","person the person who is showing the information",}),"return":({"the club information string, 0 if no information",}),]),}),"www_club_list":({({"string",}),({({"string",}),"person",({"int",}),"print_families",}),(["main":({"This method prints out a list of the current clubs into html.",}),"see":({"club_info()","club_members()","www_club_list()","www_club_info()",}),"param":({"person the person who is doing the listing","print_families 1 print the families, 0 print the clubs",}),"return":({"the club listing string",}),]),}),"club_members":({({"int",}),({({"string",}),"club",({"int",}),"online",({"string",}),"person",}),(["main":({"This method prints out all the members of the club, or all the membersof the club online.  This method is designed to work withadd_command().",}),"param":({"club_name the name of the club to print the members of","online print only the online members",}),"return":({"1 if successful, 0 if not",}),]),}),"sort_and_capitalise":({({"string",}),({({"string","*",}),"arr",}),(["main":({"This method will sort and capitalise the array of strings sent intothe method.",}),"see":({"club_members()",}),"param":({"arr the array to sort and capitalise",}),"return":({"the sorted and capitalised string",}),]),}),])
inherits ([])
main_docs (["main":({"This is an inheritable for printing out different sorts of clublistings.",}),"started":({"Sat Oct 24 02:28:04 EDT 1998",}),"author":({"Pinkfish",}),"see":({"/handlers/club_handler.c","/std/room/club_control_room.c",}),])
define_docs ([])
includes (["/secure/include/login.h":962429079,"/include/time.h":1049465667,"/include/player_handler.h":962428284,"/include/broadcaster.h":962756770,"/include/clubs.h":1050407666,"/secure/include/login_handler.h":962429079,])
class_docs ([])
file_name "/std/basic/club_listing.c"
last_changed 1021204548
