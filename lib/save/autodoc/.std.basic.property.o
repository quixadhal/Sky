#/secure/handlers/autodoc/autodoc_file.c
public_functions (["query_is_timed_property":({({"int",}),({({"string",}),"str",}),(["main":({"Is this property value timed?",}),"param":({"str the property to check",}),"return":({"1 if it is, 0 if not",}),]),}),"query_property":({({"mixed",}),({({"string",}),"str",}),(["main":({"Returns the value of the property.  This will return the current valueof the named property.",}),"param":({"str the property to find",}),"return":({"the value of the property",}),]),}),"remove_property":({({"int",}),({({"string",}),"var",}),(["main":({"Removes a property off the object.  This removes the named propertyfrom the object.",}),"param":({"var the name of the property",}),"return":({"always returns 1",}),]),}),"add_properties":({({"void",}),({({"mapping",}),"map",}),(["main":({"Adds a mapping of properties in, instead of just one.",}),"param":({"map the mapping of properties",}),]),}),"query_properties":({({"mapping",}),({}),(["main":({"returns a mapping with all the properties in it.",}),"return":({"a mapping of all the properties",}),]),}),"query_property_time_left":({({"int",}),({({"string",}),"str",}),(["main":({"If this is a timed property it returns the amount of time left.",}),"param":({"str the property name",}),"return":({"the amount of time left",}),]),}),"add_property":({({"varargs","int",}),({({"string",}),"var",({"mixed",}),"val",({"int",}),"tim",}),(["main":({"Adds a property onto the object.  Allows you to add a propertyonto the current object.  You can also set a time for the propertyto last.",}),"param":({"var the name of the property","val the value to give the property","tim the time before the property should time out",}),"return":({"1 if it succeeded, 0 if it failed.",}),]),}),"query_timed_properties":({({"mapping",}),({}),(["main":({"Returns a mapping of all the timed properties.",}),"return":({"a mapping of all the timed properties",}),]),}),])
protected_functions (["reload_player_properties":({({"void",}),({}),(["main":({"Fixes the times back up again after it has been loaded.",}),]),}),"save_player_properties":({({"void",}),({}),(["main":({"Updates the timeouts and stuff before saving the player object.",}),]),}),])
inherits ([])
main_docs (["main":({"The property handling system.  This handles all the stuff to do withproperties.",}),"author":({"Pinkfish",}),])
define_docs ([])
includes ([])
class_docs ([])
file_name "/std/basic/property.c"
last_changed 1010059680
