#/secure/handlers/autodoc/autodoc_file.c
public_functions (["query_attack_message":({({"mixed","*",}),({({"string",}),"name",({"string",}),"type",}),(["main":({"This method returns the attack message associated with thetype and name.  The type and name are around this way to correspondto the parameters to add_attack.",}),"param":({"name the name of the attack","type the type of the attack",}),"return":({"the attack message array, 0 for none",}),]),}),"calc_attack":({({"int",}),({({"int",}),"number",({"int",}),"percent",}),([]),}),"query_attack_data":({({"mixed","*",}),({}),([]),}),"query_special_messages":({({"mapping",}),({}),([]),}),"query_weapon_type":({({"string",}),({}),(["main":({"This method attempts to work out what type of weapon this is.",}),"return":({"the weapon type",}),]),}),"weapon_attacks":({({"mixed","*",}),({({"int",}),"percent",({"object",}),"target",}),([]),}),"add_attack":({({"varargs","int",}),({({"string",}),"a_name",({"int",}),"chance",({"int","*",}),"damage",({"string",}),"type",({"string",}),"skill",({"mixed",}),"func",({"mixed",}),"bogus_1",({"mixed",}),"bogus_2",}),(["main":({"This method adds an attack onto the object.  The name of the attackmust be unique on each object.",}),"see":({"remove_attack()",}),"param":({"a_name attack name","change the chance of it occuring","damage the damage it will do","type the type of the attack","skill the skill used by the attack","func the special function","bogus_1 errrr.","bogus_2 frog.",}),]),}),"modify_damage":({({"int",}),({({"int",}),"damage",({"string",}),"attack_name",}),([]),}),"attack_function":({({"void",}),({({"string",}),"a_name",({"int",}),"damage",({"object",}),"attack_ob",({"object",}),"attack_by",}),([]),}),"remove_attack":({({"void",}),({({"string",}),"a_name",}),(["main":({"This method removes the attack of the given name.",}),"see":({"add_attack()",}),"param":({"a_name the name of the attack to remove",}),]),}),"add_attack_message":({({"void",}),({({"string",}),"name",({"string",}),"type",({"string","*",}),"data",}),(["main":({"This method adds a special attack message set onto the weapon.  The typeand name are around this way to correspondto the parameters to add_attack.",}),"param":({"name the name of the attack (0 for none)","type the type of attack","data the attack data",}),"see":({"/std/weapon.mess","query_special_message()",}),"example":({"inherit \"/obj/weapon\";void setup() {  ...  add_attack_message(\"gumboot\", \"blunt\", ({     20, ({        \"You gumboot $hcname$ lightly with your $wcname$.\\n\",        \"$mcname$ gumboots you lightly with $mposs$ $wcname$.\\n\",        \"$mcname$ gumboots $hcname$ lightly with $mposs$ $wcname$.\\n\"}),      60, ({        \"You gumboot $hcname$ with your $wcname$.\\n\",        \"$mcname$ gumboots you with $mposs$ $wcname$.\\n\",        \"$mcname$ gumboots $hcname$ with $mposs$ $wcname$.\\n\"}),      0, ({ // default message        \"You gumboot $hcname$ heavily with your $wcname$.\\n\",        \"$mcname$ gumboots you heavily with $mposs$ $wcname$.\\n\",        \"$mcname$ gumboots $hcname$ heavily with $mposs$ $wcname$.\\n\"}));  ...} /* setup() */",}),]),}),"query_attack_names":({({"string","*",}),({}),([]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"This class has all the stuff for anything which can damage somethingelse, this is included into living and weapons.",}),"author":({"Pinkfish.",}),])
define_docs ([])
includes (["/include/weapon.h":962428284,])
class_docs ([])
file_name "/std/weapon_logic.c"
last_changed 1000719351
