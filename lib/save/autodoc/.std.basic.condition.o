#/secure/handlers/autodoc/autodoc_file.c
public_functions (["set_cond":({({"void",}),({({"int",}),"i",}),(["main":({"This method sets the current condition of the object.  If this is lowerthan the current lowest conditon, then the lowest condition will be modifiedto be this.",}),"see":({"adjust_condition",}),"param":({"i the new condition",}),]),}),"query_hide_cond":({({"int",}),({}),(["main":({"This method returns whether the condition string returns \"\" or somethingmeaning full.",}),"return":({"the current lowest condition",}),]),}),"adjust_cond":({({"int",}),({({"int",}),"i",}),(["main":({"This method adjust the current condition by the given amount.  Ifresultant condition is less than the lowest condition, then the lowestcondition is set to this value.  If it is greater than the maximumcondition.  Then the condition is set to the maximum condition.  If thecondition is less than or equal to 0, then the object is attempted tobe broken.",}),"see":({"set_cond()",}),"param":({"i the amount to adjust the condition by",}),"return":({"the new condition",}),]),}),"do_damage":({({"void",}),({({"string",}),"type",({"int",}),"amount",}),(["main":({"This method damages the object.  The conditon is reduced bythe amount multiplied by 1 + 2 * random(damage_chance) ewhicis then divided by 100.  This means it does approximatelythe percentage of of the damage done to the object to its condition.",}),"see":({"set_damage_chance()See query_damage_chance()",}),]),}),"query_damage_chance":({({"int",}),({}),(["main":({"This method returns the percentage of the damage which is done to theobject which will be carried through.",}),"see":({"do_damage()",}),"return":({"the damage chance",}),]),}),"query_lowest_cond":({({"int",}),({}),(["main":({"This method returns the current lowest conditon.",}),"return":({"the current lowest condition",}),]),}),"query_max_cond":({({"int",}),({}),(["main":({"This method returns the current maximum conditon.",}),"return":({"the current maximum condition",}),]),}),"cond_string":({({"string",}),({}),(["main":({"This method returns the current condition as a string.",}),"return":({"the string value of the condition",}),]),}),"set_max_cond":({({"void",}),({({"int",}),"i",}),(["main":({"This sets up how much damage an object can take before itbreaks.  This should not be used in the actual object filesunless under special circumstances.  In weapon files, usenew_weapon().  In armour files use setup_armour().  Inclothing files, use setup_clothing().  Use ::Setup:: inclo, arm, and wep files.<p>The values may seem strange, as cloth can take more damageper unit weight than steel.  This is because steel weighsso much, and cloth weighs so little.<br><br>o==================o=====================o<br>|     Material     |  Maximum Condition  |<br>|                  |   per unit weight   |<br>o==================o=====================o<br>| Cloth            |         90          |<br>| Hide             |         80          |<br>| Leather          |         70          |<br>| Wood             |         60          |<br>| Bone             |         45          |<br>o==================o=====================o<br>| Copper           |         30          |<br>| Stone            |         40          |<br>| Bronze           |         40          |<br>| Iron             |         50          |<br>| Steel            |         60          |<br>| Klatchian Steel  |         70          |<br>| Octiron          |         80          |<br>o==================o=====================o",}),"see":({"new_weapon","setup_armour","setup_clothing","set_weight","set_damage_chance",}),]),}),"set_percentage":({({"void",}),({({"int",}),"i",}),(["main":({"This method is used to setup the objects condition.  Once the maximumcondition has been set, this is used to set the maximum condition tothis percentage of the maximum condition.It sets the lowest conditon a random value from 70-100% of thecurrent condition.",}),"see":({"/handlers/armoury.c","set_cond()","set_lowest_cond()","query_max_cond()",}),"param":({"i the percentage condiion",}),]),}),"set_hide_cond":({({"void",}),({({"int",}),"i",}),(["main":({"This sets whether the condition string should be returned or not.  Thisis for objects what indicate their condition with different longdescriptions instead of the default condition string.",}),"param":({"i set it to 1 to hide the condition string.",}),]),}),"set_damage_chance":({({"void",}),({({"int",}),"number",}),(["main":({"This method sets the percentage of the damage which is done to theobject which will be carried through.<p>Use the following chart to set the damage chance.<br><br>o==================o=====================o<br>|     Material     |    Damage Chance    |<br>o==================o=====================o<br>| Cloth            |         20          |<br>| Hide             |         17          |<br>| Bone             |         16          |<br>| Leather          |         15          |<br>| Wood             |         12          |<br>| Copper           |         10          |<br>| Bronze           |          8          |<br>| Iron             |          6          |<br>| Steel            |          5          |<br>| Klatchian Steel  |          3          |<br>| Stone            |          3          |<br>| Octiron          |          0          |<br>o==================o=====================o",}),"param":({"number the new damage chance",}),"see":({"new_weapon","setup_armour","setup_clothing","set_weight","set_max_cond","query_damage_chance()","do_damage()",}),]),}),"break_me":({({"void",}),({}),(["main":({"This method breaks the object.  This moves it into the recycledobject section of the armoury or dests itself if this is notpossible.",}),]),}),"query_cond":({({"int",}),({}),(["main":({"This method returns the current conditon.",}),"return":({"the current condition",}),]),}),"set_lowest_cond":({({"void",}),({({"int",}),"i",}),(["main":({"This sets the lowest condition for the object.  The lowest condvariable is used for repairing the armour...See where it was repaired to last time, this determines how difficultrepairs will be...",}),"see":({"adjust_cond()","set_cond()",}),"param":({"i the new lowest condition",}),]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"This class keeps track of the condition of a particular object.  Ithandles damaging the object when it is hit and the lowest conditon towhich the object has been damaged.  The lowest conditon keeps track ofhow hard the object is to fix.  If an object has been reduced to reallyshaggy condition at one point, it will be a lot harder to fix from thenon.",}),"author":({"Pinkfish",}),])
define_docs (["DAMAGE_NORM":([]),])
includes (["/include/move_failures.h":962428284,"/include/armoury.h":962428284,])
class_docs ([])
file_name "/std/basic/condition.c"
last_changed 1006385343
