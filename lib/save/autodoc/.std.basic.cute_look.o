#/secure/handlers/autodoc/autodoc_file.c
public_functions (["query_contents":({({"varargs","string",}),({({"string",}),"start",({"object","*",}),"things",({"int",}),"ignore_living",}),(["main":({"This method returns a string contents of description of the container.NB: TP is _not_ included in the array if (s)he is present.The ignore_living flag tells us if we should process livingobjects as different or not.  If we do not process them asdifferent (as you do in room descriptions), then this flag shouldbe 0.  This is so that living objects can be kept an aninventory of a player without stuff it up.  ie: Pets.",}),"param":({"start the start message before the contents","things the things to give the message for","ignore_living treat livings differently",}),"return":({"a string contents description",}),]),}),"list_contents":({({"void",}),({({"string",}),"words",}),(["main":({"This method prints out the contents of the object matching.",}),"param":({"word the string to match",}),]),}),"process_living":({({"mixed","*",}),({({"object","*",}),"int_livings",}),([]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"This object handles all the inventory listing for rooms, when long() iscalled.It should convert like this: ({ /w/terano/womble#1234, /std/object#1324,/global/creator#2523 }) into \"Lady Midnite is standing here.\\nA key and awomble are floating happily.\\n\"",}),"author":({"Lynscar",}),"change":({"DeuthaAdded in support for the one_short, the_short stuff.  Also addedin the 'last' stuff I think.","PinkfishAdded in support for positions.","TeranoRewrote removing all the foreachs, and getting rid of chicken and lastvariables. Should be much nicer now.",}),])
define_docs (["NEW_PROCESS_NON_LIVING":([]),])
includes (["/include/position.h":1056994259,])
class_docs ([])
file_name "/std/basic/cute_look.c"
last_changed 1200761934
