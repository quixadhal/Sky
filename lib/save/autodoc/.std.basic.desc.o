#/secure/handlers/autodoc/autodoc_file.c
public_functions (["pretty_short":({({"varargs","string",}),({({"object",}),"thing",}),(["main":({"This method does weird stuff.  Pretty much it just calls theshort() function with the dark parameter...  This should not beused to generate output.  Use a_short(), the_short(), orone_short or poss_short() instead.",}),"param":({"thing the viewer",}),"see":({"short()","/global/player->check_dark()","a_short()","the_short()","poss_short()","one_short()",}),"return":({"the string being the short",}),]),}),"query_short":({({"mixed",}),({}),(["main":({"This method returns the unadulterated short description.  The othershort calls might modify the output to display some status information.",}),"see":({"short()","set_short()","a_short()","the_short()","poss_short()","one_short()",}),"return":({"the short description",}),]),}),"poss_short":({({"varargs","string",}),({({"int",}),"flag",}),(["main":({"This method returns the \"possessed\" short.  This function returns astring that the message system replaces, when messages are printed, by astring dependent on the possessor of the object and its short asgiven by pretty_short. If the object has no environment or is not in aliving object or corpse, that string is the determinate. If theenvironment of the object is the viewer of the message, that stringis \"your\". If the determinate is defined and is not \"a \" or \"an \",or, if it is not defined or is \"a \" or \"an \" but it is the only thing in itsenvironment with its plural, that string is the possessive of the owner, ifthe owner has already been mentioned in constructing a sentence, or theowner's the_short plus \"'s \"; otherwise, the string is \"oneof the \" plus the possessive bit as described in the previous part ofthis sentence. Got all that? Good :) The string should not be stored,since the object to which it refers may not later exist; it can beprocessed with convert_message. Poss_short is mostly used for referringto an object when a person has just used it to do something.<p>The return of this function needs more processing before the playersees it.  In general you will not need to worry about this.",}),"see":({"set_short()","short()","a_short()","the_short()","one_short()","/global/events->convert_message()",}),"param":({"flag If this flag is set, do not bring the player out of hiding.",}),"example":({"\"one of Wombat's knives\".\"one of his wands\".\"her Wyrm Sword\".\"Frenkel twists one of his rings.\"",}),]),}),"set_main_plural":({({"void",}),({({"mixed",}),"str",}),(["main":({"This method sets the main plural for the object.  The main pluralis like the short description for the pluralised object.  If thisis not set then the short will attempt to be pluralised tofigure it out.",}),"param":({"str the main plural",}),"see":({"efun::pluralize()","query_plural()","query_main_plural()","set_short()",}),"example":({"set_main_plural(\"green wombles\");",}),]),}),"pretty_plural":({({"varargs","string",}),({({"object",}),"thing",}),(["main":({"The observer dependant plural.  It was specifical written tohandle money that needed to be displayed over several lines butonly be one object. The way this was achived was if pretty_pluralreturns an array then each of the elements of the array is consideredto be a seperate object and displayed accordingly.",}),"param":({"thing the observer",}),"see":({"set_main_plural()","/obj/money->pretty_plural()",}),"return":({"the plural string",}),]),}),"set_long":({({"void",}),({({"mixed",}),"str",}),(["main":({"This method sets the long description for the object.  The long descriptionis what the player sees with they 'look' at the object.  Please make suretht you use sentances in your long description.  Something like'The red box' is not a sentance.  You can use colour codes in yourlong description to make it look cool.",}),"param":({"str the long description",}),"see":({"help::look","long()","query_long()","help::colours",}),"example":({"set_long(\"Picture perfect and glowing with an internal radience the \"         \"Red Rose is simply wonderful.\\n\");",}),]),}),"query_plural":({({"varargs","string",}),({({"int",}),"dark",}),(["main":({"This method returns the current plural string.  This is often overriddento display extra information about the object, like the short andlong calls.  There is always an exception to a naming scheme :)",}),"param":({"dark if it was dark when viewing",}),"see":({"set_main_plural()","query_main_plural()",}),"return":({"the plural string",}),]),}),"short":({({"varargs","string",}),({({"int",}),"dark",}),(["main":({"This method returns the current short description.  This is oftenoverridden to return status information about the object.",}),"param":({"dark if it is dark when viewing",}),"return":({"the short description string",}),]),}),"one_short":({({"varargs","string",}),({({"int",}),"flag",}),(["main":({"This method returns an \"out-of-a-group\" short.This function returns a string that the message system replaces, whenmessages are printed, by a string dependent on the determinate ofthe object and its short as given by pretty_short. If the vieweris not in the same environment as the object or if the determinate isdefined and is not \"a \" or \"an \", that string is the determinate. Ifthere is more than one object with the same plural as that object in itsenvironment, then that string is \"one of the \"; otherwise thestring is \"the \". The output from from one_short should not bestored, since the object to which it refers may not later exist; it can beprocessed with convert_message. One_short is mostly used forreferring to a living object when it performs an action independentof any previous actions.<p>The return of this function needs more processing before the playersees it.  In general you will not need to worry about this.",}),"see":({"set_short()","short()","a_short()","the_short()","poss_short()","/global/events->convert_message()",}),"param":({"flag If this flag is set, do not bring the player out of hiding.",}),"example":({"\"one of the poor beggars\"\"the Weasel\"\"Detritus\"\"One of the sailors falls over\"",}),]),}),"query_determinate":({({"string",}),({({"object",}),"thing",}),(["main":({"This returns the determinate for the object.  The determinate issomething like 'the'.  You set the derterminate by settingthe \"determinate\" property.  The viewer is check to see ifthey can see the object as well, if it cannot be seen\"' is returned.",}),"param":({"thing the thing to check for visibility",}),"see":({"/std/basic/property->add_property()",}),"example":({"// Set the determinate propertyadd_property(\"determinate\", \"the\");",}),]),}),"query_long_details":({({"string",}),({({"string",}),"arg",({"int",}),"dark",({"object",}),"looker",}),(["main":({"This method returns extra details about the object that should beknown above the basic long.  This is printed to people who do notown the object in question (long() is used if you own it).",}),"param":({"arg the argument the look was called with","dark how dark the place is","looker the person looking at the object",}),]),}),"query_long":({({"mixed",}),({}),(["main":({"This method returns the unadulterated long description.  The otherlong calls might modify the output to display some status information.",}),"see":({"long()","set_long()",}),"return":({"the long description",}),]),}),"query_main_plural":({({"mixed",}),({}),(["main":({"This method returns the current value of the main plural.",}),"return":({"the main plural",}),]),}),"the_short":({({"varargs","string",}),({({"int",}),"flag",}),(["main":({"This method returns the \"determinate\" short.  This function returns astring that the message system replaces, when messages are printed, by thedeterminate of the object (or \"the\" if the determinate is \"a\", \"an\" orundefined) and its short as given by pretty_short. The stringshould not be stored, since the object to which it refers may not laterexist; it can be processed with convert_message.<p>The return of this function needs more processing before the playersees it.  In general you will not need to worry about this.",}),"see":({"set_short()","short()","a_short()","poss_short()","one_short()","/global/events->convert_message()",}),"param":({"flag If this flag is set, do not bring the player out of hiding.",}),"example":({"\"the poor beggar\"\"the Weasel\"\"Detritus\"",}),]),}),"a_short":({({"varargs","string",}),({({"int",}),"flag",}),(["main":({"This method returns the \"indeterminate\" short.  This function returns astring that the message system replaces, when messages are printed, by thedeterminate of the object and its short as given by pretty_short. Thestring should not be stored, since the object to which it refers maynot later exist; it can be processed with convert_message.<p>The return of this function needs more processing before the playersees it.  In general you will not need to worry about this.",}),"see":({"set_short()","short()","the_short()","poss_short()","one_short()","/global/events->convert_message()",}),"param":({"flag If this flag is set, do not bring the player out of hiding.",}),"example":({"\"a poor beggar\"\"the Weasel\"\"Detritus\"",}),]),}),"set_short":({({"void",}),({({"mixed",}),"words",}),(["main":({"This method sets the short description for the object.  Be carefulwith using function pointers here, as they do not save whenplayers log out.<p>The short description is the description seen in peoples inventorys andin brief mode when you enter rooms. This should be only a few wordslong and should contain a fairly good description of theobject. Colour processing is done on basicly all of discworlds output,so that will work in the short.",}),"see":({"short()","query_short()","a_short()","the_short()","poss_short()","one_short()",}),"param":({"words the short description",}),"example":({"set_short(\"red rose\");",}),]),}),"long":({({"string",}),({({"string",}),"str",({"int",}),"dark",}),(["main":({"This method returns the current long description.  This isoften overriden to display other information.",}),"see":({"set_long()",}),"param":({"str the string which matched us","dark is it dark when viewing",}),"return":({"the current long descriptions",}),]),}),])
protected_functions ([])
inherits (["/std/basic/hide_invis":({}),])
main_docs (["main":({"The main description handling class.  Keeps track of the longs shortetc.",}),"author":({"Pinkfish",}),"change":({"sometime DeuthaAdded all the a_short(), the_short() etc stuff.",}),])
define_docs ([])
includes ([])
class_docs ([])
file_name "/std/basic/desc.c"
last_changed 1200761934
