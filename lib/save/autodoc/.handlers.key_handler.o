#/secure/handlers/autodoc/autodoc_file.c
public_functions (["set_key_permissions":({({"void",}),({({"string",}),"group",({"string",}),"key",({"string","*",}),"types",}),(["main":({"This method will set the key permissions for a certain sort ofkey.  It will overwrite any current possible key permission sets.",}),"see":({"remove_key_permission()","add_key_permission()","query_key_permission()","query_all_key_permissions()","query_all_keys()",}),"param":({"group the key group to set the permissions for","key the key to set the permission for","types the new set of permission types",}),]),}),"query_key_permission":({({"int",}),({({"string",}),"group",({"string",}),"key",({"string",}),"type",}),(["main":({"This method will see if the given key perrmision exists for thiskey in this particular group and key.",}),"see":({"remove_key_permission()","add_key_permission()","set_key_permissions()","query_all_key_permissions()","query_all_keys()",}),"param":({"group the key group to look up in","key the key to check","type the permission type to see if it exists",}),"return":({"1 if the permission exists, 0 if not",}),]),}),"remove_key_permission":({({"int",}),({({"string",}),"group",({"string",}),"key",({"string",}),"type",}),(["main":({"This method removes a specific permission type from the givenkey group and key.",}),"see":({"add_key_permission()","query_key_permission()","set_key_permissions()","query_all_key_permissions()","query_all_keys()",}),"param":({"group the key group to remove the key from","key the key to remove the permission from","type the type of permission to remove",}),"return":({"0 if the permission was not remove, 1 if it was",}),]),}),"query_all_key_permissions":({({"string","*",}),({({"string",}),"group",({"string",}),"key",}),(["main":({"This method returns all the permision types associated with the key.The permission types are an array of string permision type names.  Ifthe key name is non-existant an empty array will be returned.",}),"see":({"remove_key_permission()","add_key_permission()","query_key_permission()","set_key_permissions()","query_all_keys()",}),"param":({"group the key group to lookup","key the key name to lookup",}),"return":({"the array of permission types",}),]),}),"query_all_keys":({({"mapping",}),({({"string",}),"group",}),(["main":({"This method returns all the keys in the current group.  The mappingconsists has an index of the key name and a value of an array ofkey permission types.",}),"see":({"remove_key_permission()","add_key_permission()","query_key_permission()","set_key_permissions()","query_all_key_permissions()",}),"param":({"group the key group to get permissions for",}),"return":({"a mapping containing all the permissions",}),]),}),"query_key_name":({({"string",}),({({"string",}),"group",({"string",}),"key",}),(["main":({"This method returns the key name for a given key.",}),"see":({"delete_key_name()","set_key_name()","query_all_key_names()",}),"param":({"group the key group to lookup","key the key type to look up",}),"return":({"the key's name",}),]),}),"query_all_key_names":({({"mapping",}),({({"string",}),"group",}),(["main":({"This method returns all the key names for the given key group.The index of the mapping is the key type and the value is its name.",}),"see":({"delete_key_name()","set_key_name()","query_key_name()",}),"param":({"group the key group",}),"return":({"the mapping containing the key names",}),]),}),"set_key_name":({({"void",}),({({"string",}),"group",({"string",}),"key",({"string",}),"name",}),(["main":({"This method sets the name of the specified key.",}),"see":({"delete_key_name()","query_key_name()","query_all_key_names()",}),"param":({"group the group to set the name of the key in","key the type of key to set the name for","name the name of the key to set",}),]),}),"delete_key_name":({({"void",}),({({"string",}),"group",({"string",}),"key",}),(["main":({"This method removes a specified key name from the current key namemapping.",}),"see":({"set_key_name()","query_key_name()","query_all_key_names()",}),"param":({"group the group to remove the key from","key the key type to remove the name of",}),]),}),"add_key_permission":({({"int",}),({({"string",}),"group",({"string",}),"key",({"string",}),"type",}),(["main":({"This method adds in a specific permission type into the currentpermission set for this key.",}),"see":({"remove_key_permission()","query_key_permission()","set_key_permissions()","query_all_key_permissions()","query_all_keys()",}),"param":({"group the key group to add the permision to","key the key to add the permission for","type the permission type to add in",}),"return":({"0 if it is already added, 1 if not",}),]),}),])
protected_functions ([])
inherits (["/std/object":({}),])
main_docs (["main":({"This handler keeps track of the keys.  The keys are arranged ingroups and each key type in the group has a name and a set ofpermissions associated with it.",}),"author":({"Deutha",}),])
define_docs (["RESTORE_PATH":([]),])
includes ([])
class_docs ([])
file_name "/handlers/key_handler.c"
last_changed 1000618249
