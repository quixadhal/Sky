#/secure/handlers/autodoc/autodoc_file.c
public_functions (["set_light":({({"int",}),({({"int",}),"number",}),(["main":({"This sets the current light level.   This method calls adjust_light()with the correct value to set the light level.<BR><BR>Light Levels:<BR>   Magically Darkened Room   0-<BR>   Absolutely Dark Room      0<BR>   Standard Dark Room        5<BR>   Dimly Lit Room            20<BR>   Mine Shaft with Candles   30<BR>   Partially Lit Room        50<BR>   Well Lit Room             60<BR>   Shaded Forest             60<BR>   Brightly Lit Room         80<BR>   Direct Sunlight           100<BR>   Explosion or flash        200+<BR>",}),"see":({"query_my_light()","query_light()",}),"param":({"number The new light level.",}),]),}),"set_opaque":({({"void",}),({}),(["main":({"This method makes this object opaque.   This means that light does notescpae from it.",}),"see":({"not_obscured_object()","set_light()",}),]),}),"adjust_light":({({"int",}),({({"int",}),"number",}),(["main":({"This changes the current light level.",}),"see":({"set_light()","query_my_light()","query_light()",}),"param":({"number the amount to chage it by",}),]),}),"query_my_light":({({"int",}),({}),(["main":({"This method returns the light associated with this object.   This doesnot count the light levels of anything inside us.",}),]),}),"new_recalc_light":({({"varargs","void",}),({}),(["main":({"This method forces a recalculation of the current light level in thisobject.",}),]),}),"query_light":({({"int",}),({}),(["main":({"This returns the total light level of the object.   This includes thelight levels of anything that happens to be inside us.",}),"see":({"query_my_light()","set_light()",}),"return":({"current light level",}),]),}),"light_level_changed":({({"void",}),({}),(["main":({"This method tells us that the light levels have changed and shouldbe recalculated when queried.",}),"see":({"inform_of_light_level_change()",}),]),}),"reset_opaque":({({"void",}),({}),(["main":({"This method makes the object transparent (default).   This means that thelight from items inside does escape.",}),"see":({"set_opaque()","set_light()",}),]),}),"remove_inform_light_change":({({"void",}),({({"object",}),"ob",}),(["main":({"This method removes an object from the current list of things tobe informed of a light change.",}),"param":({"ob the object to remove from the inform list",}),]),}),"add_inform_light_change":({({"void",}),({({"object",}),"ob",}),(["main":({"This method adds an object to be informed of light change events.",}),"param":({"ob the object to be informed of light change events",}),]),}),"inform_of_light_level_change":({({"void",}),({({"object",}),"ob",}),(["main":({"This method tells all our environments that the light level haschanged.",}),"see":({"light_level_changed()",}),"param":({"ob the object whose environment we should tell about the change",}),]),}),"query_light_needs_inform":({({"int",}),({}),([]),}),"query_opaque":({({"int",}),({}),(["main":({"This method checks to see if the object is opaque or not.",}),"return":({"1 if it is opaque, 0 if not",}),]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"This method handles the light changing and control.",}),"author":({"Pinkfish",}),])
define_docs ([])
includes ([])
class_docs ([])
file_name "/std/basic/light.c"
last_changed 1005172139
