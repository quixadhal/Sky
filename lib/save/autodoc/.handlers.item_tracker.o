#/secure/handlers/autodoc/autodoc_file.c
public_functions (["delete_item":({({"int",}),({({"mixed",}),"pl_name",({"mixed",}),"item",}),(["main":({"This method deletes the state/location information of a specific quest itemowned by a player.<p>If the item isn't actually owned by the player it returns 0",}),"returns":({"1 on success",}),"see":({"set_item_state()",}),"param":({"pl_name   player object or name","item      item object or identifier",}),]),}),"save_all_item_states":({({"int",}),({({"mixed",}),"pl_name",}),(["main":({"This method saves the mapping of state/location information for items owned by a player to disk.",}),"see":({"set_item_state()","query_item_state()","delete_item()","save_all_item_states_and_delete_from_cache()",}),"param":({"pl_name   player object or name","item      item object or identifier",}),"return":({"1 if successful",}),]),}),"query_item_state":({({"mixed",}),({({"mixed",}),"pl_name",({"mixed",}),"item",}),(["main":({"This method returns the state/location of a specific quest itemowned by a player.<p>If the item isn't actually owned by the player it returns 0",}),"returns":({"string array of state information",}),"see":({"set_item_state()","delete_item()",}),"param":({"pl_name   player object or name","item      item object or identifier",}),]),}),"query_all_item_states":({({"mixed",}),({({"mixed",}),"pl_name",}),(["main":({"This method returns all the information about quest itemsowned by a player.",}),"returns":({"state/location of items mapping for player",}),"see":({"set_item_state()","delete_item()",}),"param":({"pl_name   player object or name",}),]),}),"set_item_state":({({"int",}),({({"mixed",}),"pl_name",({"mixed",}),"item",({"mixed",}),"state",}),(["main":({"This method sets the state/location of a specific quest itemowned by a player.<p>If the item isn't actually owned by the player it returns 0",}),"returns":({"1 if successful",}),"see":({"query_item_state()","delete_item()","save_all_item_states()",}),"param":({"pl_name   player object or name","item      item object or identifier",}),]),}),"query_item_copies":({({"int",}),({({"mixed",}),"pl_name",({"mixed",}),"item",}),(["main":({"This method returns the total number of known copies of a specific quest itemowned by a player.<p>If the item isn't actually owned by the player it doesn't matter.",}),"returns":({"number of copies",}),"see":({"set_item_state()","delete_item()",}),"param":({"pl_name   player object or name","item      item object or identifier",}),]),}),"save_all_item_states_delete_cache":({({"int",}),({({"mixed",}),"pl_name",}),(["main":({"This method saves the mapping of state/location information for items owned by a player to disk and deletesthe entry in the cache.",}),"see":({"set_item_state()","query_item_state()","delete_item()","save_all_item_states()",}),"param":({"pl_name   player object or name","item      item object or identifier",}),"return":({"1 if successful",}),]),}),])
protected_functions ([])
inherits (["/std/object":({}),])
main_docs (["main":({"This handler keeps track of unique (hopefully) per player items in the game.",}),"author":({"Shaggy",}),])
define_docs (["MAX_COPIES":([]),"QUEST_INFO_IDENT":([]),])
includes (["/include/quest_handler.h":962428284,"/include/library.h":962428284,])
class_docs ([])
file_name "/handlers/item_tracker.c"
last_changed 962428359
