#/secure/handlers/autodoc/autodoc_file.c
public_functions (["query_enchant_set_time":({({"int",}),({}),(["main":({"This method returns the time the time the enchantment was set.",}),"return":({"the time the enchantment was set",}),]),}),"enchant_string":({({"string",}),({}),(["main":({"This method returns the current enchantment string for the object.  Thestring is created from the percentage of the max enchantment that it isenchanted to.  If the object is also a talisman, an identifying string isappended to the enchantment message.<p>These messages are only visible to creators and players who can seeoctarine.<p>If the property \"octarine_mess\" is set, then this will be printed insteadof the automatically generated enchantment message.<p>If the property \"talisman_mess\" is set, then this will be printed insteadof the automatically generated talisman message if appropriate.",}),"see":({"set_enchant()","add_enchant()","query_max_enchant()","query_enchant()",}),"return":({"the enchantment string and talisman string",}),]),}),"query_enchant":({({"int",}),({}),(["main":({"This method queries the current enchantment level.",}),"see":({"enchant_string()","set_enchant()","query_max_enchant()","add_enchant()",}),"param":({"number the new enchantment level",}),]),}),"query_real_enchant":({({"int",}),({}),(["main":({"This method returns the actual enchant of the object.",}),"return":({"the actual enchant value",}),]),}),"add_enchant":({({"int",}),({({"int",}),"number",}),(["main":({"This method changes the current enchanment level.",}),"see":({"enchant_string()","query_enchant()","set_enchant()","query_max_enchant()",}),"param":({"numnber the amount to chant the enchantment level by",}),]),}),"set_enchant":({({"void",}),({({"int",}),"number",}),(["main":({"This method sets the current enchantment level.   If it is greator thanthe max enchantment level then it will be set to the maximumenchantment level.",}),"see":({"enchant_string()","query_enchant()","query_max_enchant()","add_enchant()",}),"param":({"number the new enchantment level",}),]),}),"query_max_enchant":({({"int",}),({}),(["main":({"This method returns the maximum possible enchantment for theobject.  This used to be based on its weight, though nowis 100 so that we have a percentage rating.",}),"return":({"the maximum enchantment",}),]),}),])
protected_functions (["set_enchant_set_time":({({"void",}),({({"int",}),"tim",}),(["main":({"This method sets the time at which the enchant level was set.",}),"param":({"tim the time to set it to",}),]),}),])
inherits ([])
main_docs (["main":({"Module to handle the amount of magical charge (enchantment) of anobject has.  The maximum enchantment of an item is determined byby its weight - the material of composition is not yet taken intoaccount.<p>Enchanting an object will add to its value, and, if the objectis an item of armour, will improve its armour class.",}),"author":({"Pinkfish",}),"change":({"20th May 1994 Deutha   added a function to calculate the maximum                enchantment based on weight.",}),])
define_docs (["ENCHANT_DEGRADE_TIME":([]),])
includes ([])
class_docs ([])
file_name "/std/basic/enchant.c"
last_changed 1031117109
