#/secure/handlers/autodoc/autodoc_file.c
public_functions (["we_moved":({({"void",}),({({"object",}),"from",({"object",}),"to",}),(["main":({"This method should be called when an object is moved.  This willremove itself from the leaving container and add itself to thenew one.",}),"param":({"from the object we came from","to the object we are going to",}),]),}),])
protected_functions ([])
inherits (["/std/basic/close_lock":({}),])
main_docs (["main":({"This file should be used in containers that wish to notify theabove container that they are able to be registered or not.The function we_moved(object from, object to) should be calledto allow the object to add and remove itself from the correctplaces.<p>We only worry about the open/close state, if something is open andlocked we don't care.  (I guess stuff can be locked openanyway).",}),"started":({"Thu Mar  5 16:20:10 CST 1998",}),"author":({"Pinkfish",}),"see":({"we_moved()",}),])
define_docs ([])
includes ([])
class_docs ([])
file_name "/std/basic/close_lock_container.c"
last_changed 1000719535
