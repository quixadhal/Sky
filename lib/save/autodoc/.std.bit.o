#/secure/handlers/autodoc/autodoc_file.c
public_functions (["add_bit_gone":({({"mixed","*",}),({({"string",}),"bit",}),([]),}),"set_bit":({({"void",}),({({"string",}),"s",({"int",}),"dec",}),(["main":({"This method sets the bit that this actually is.",}),"param":({"s the name of the bit","dec the current decay numbe",}),]),}),"set_corpse_weight":({({"void",}),({({"int",}),"i",}),(["main":({"This method sets the weight of the bit.",}),"param":({"i the weight of the bit",}),]),}),"query_bit_left_pl":({({"string","*",}),({({"string",}),"s",}),(["main":({"This method figures out of the specified bit is left using the plural name.",}),"param":({"s the bit to check if it is left",}),"return":({"the name of the bit if it is left",}),]),}),"set_bits_gone":({({"void",}),({({"string","*",}),"bits",}),(["main":({"This method sets the array of gone bits on the bit.",}),"param":({"bits the set of bits gone to set",}),]),}),"query_race_ob":({({"string",}),({}),(["main":({"This method returns the race object associated with the bit.",}),"return":({"the race object",}),]),}),"query_bits_gone":({({"string","*",}),({}),(["main":({"This method returns the current array of bits gone from thisbit.",}),"return":({"the list of missing bits",}),]),}),"query_bits_left":({({"string","*",}),({}),(["main":({"This method returns the current array of bits left.",}),"return":({"the array of bits left",}),]),}),"do_cure":({({"void",}),({}),(["main":({"This method cures the corpse.  A cured bit no longer decays.",}),]),}),"query_possible_plural_bits":({({"string","*",}),({({"string",}),"word",}),(["main":({"This returns the plural of all the possible bit names.If the bits are restricted then thepossible bits are the ones that are contained by that bit.",}),"param":({"word restrict the possible bits",}),"return":({"the array of possible bit names",}),]),}),"do_eat":({({"int",}),({}),(["main":({"The main eat entry point.",}),"return":({"1 on success, 0 on failure",}),]),}),"query_determinate":({({"string",}),({({"object",}),"caller",}),([]),}),"query_decay":({({"int",}),({}),(["main":({"This method returns the current decay level of the corpse",}),"return":({"the current decay level",}),]),}),"set_race_ob":({({"void",}),({({"string",}),"str",}),(["main":({"This method sets the race object associated with the corpse.",}),"param":({"str the race object to set",}),]),}),"set_race_name":({({"void",}),({({"string",}),"str",}),(["main":({"This method sets the name of the race associated with the corpse.",}),"param":({"str the race name to set",}),]),}),"set_bits":({({"void",}),({}),(["main":({"This method sets all the basic bits for the bit when it is first created.",}),]),}),"query_bit_data":({({"mixed",}),({}),(["main":({"This method returns the bit data for the bit.  The return array is ofthe format same format as used in the races.",}),"see":({"/std/races/basic.c",}),"return":({"the bit data",}),]),}),"make_bits":({({"object","*",}),({({"string","*",}),"what_bits",}),(["main":({"This method makes a bunch of bits at once.",}),"param":({"what_bits the list of bits to create",}),"return":({"the array of made bits",}),]),}),"query_vect":({({"int","*",}),({}),(["main":({"This method returns the vector used with the potion space.  Ithink this call is now obsolete and not used.",}),"return":({"the vectorof the bit",}),]),}),"no_decay":({({"int",}),({}),(["main":({"THis method checks to see if the bit can inherently not decay.Like trolls teeth and other such things.",}),"return":({"1 if it cannot decay, 0 if it can",}),]),}),"query_edible":({({"int",}),({}),(["main":({"This method checks to see if the bit is edible or not.",}),"return":({"1 if it is edible, 0 if not",}),]),}),"make_bit":({({"object",}),({({"string",}),"which_bit",}),(["main":({"This method creates a bit from the current bit.",}),"param":({"which_bit the name of the bit to create",}),"return":({"the object that is the new bit",}),]),}),"query_race_name":({({"string",}),({}),(["main":({"This method returns the name of the race associated with thisbit.",}),"return":({"the name of the race",}),]),}),"do_decay":({({"int",}),({}),(["main":({"This method is called by the bits controller to do the actualdecaying of the object.",}),"return":({"1 if it still exists, 0 if it has finished decaying",}),]),}),"setup_long":({({"void",}),({}),(["main":({"This method sets up the long and short based on the current decaylevels of the corpse.",}),]),}),"query_possible_bits":({({"string","*",}),({({"string",}),"word",}),(["main":({"This method returns the possible bits that can be removedfrom this bit.  If the bits are restricted then thepossible bits are the ones that are contained by that bit.",}),"param":({"word restrict the possible bits",}),"return":({"the list of possible bits",}),]),}),"query_bit_left":({({"string",}),({({"string",}),"s",}),(["main":({"This method figures out of the specified bit is left.",}),"param":({"s the bit to check if it is left",}),"return":({"the name of the bit if it is left",}),]),}),"query_cured":({({"int",}),({}),(["main":({"This returns the cured state of the bit.",}),"return":({"1 if it is cured, 0 if not",}),]),}),])
protected_functions ([])
inherits (["/std/object":({}),])
main_docs (["changed":({"Fixed some bad variable types - Sandoz, November 2002.",}),"main":({"The bit object is the object created to handle bits of corpses, likefingers and eyes and so on.",}),"author":({"Ember",}),])
define_docs (["DECAY_TIME":([]),])
includes (["/include/corpse.h":962428284,"/include/bit.h":962428284,])
class_docs ([])
file_name "/std/bit.c"
last_changed 1200761934
