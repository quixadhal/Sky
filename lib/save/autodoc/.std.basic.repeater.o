#/secure/handlers/autodoc/autodoc_file.c
public_functions (["repeat_event_say":({({"void",}),({({"object",}),"caller",({"object",}),"ob",({"string",}),"mess",({"object","*",}),"avoid",}),(["main":({"This is called on the repeater object to process the actual messageevent_say message.",}),"param":({"caller the repeater who sent the message","ob the object that did the event_say","mess the message string","avoid the array of objects not to print the message",}),]),}),"repeat_event_soul":({({"void",}),({({"object",}),"caller",({"object",}),"ob",({"string",}),"mess",({"object","*",}),"avoid",}),(["main":({"This is called on the repeater object to process the actual messageevent_soul message.",}),"param":({"caller the repeater who sent the message","ob the object that did the event_soul","mess the message string","avoid the array of objects not to print the message",}),]),}),"repeat_event_emote":({({"void",}),({({"object",}),"caller",({"object",}),"ob",({"string",}),"mess",}),(["main":({"This is called on the repeater object to process the actual messageevent_emote message.",}),"param":({"caller the repeater who sent the message","ob the object that did the semote","mess the message string",}),]),}),"repeat_event_enter":({({"void",}),({({"object",}),"caller",({"object",}),"ob",({"string",}),"mess",({"object",}),"prev",}),(["main":({"This is called on the repeater object to process the actual messageevent_enter message.",}),"param":({"caller the repeater who sent the message","ob the object that did the event_say","mess the message string","prev the last environment of the object",}),]),}),"query_repeater_owner":({({"object",}),({}),(["main":({"This method returns the owner of the repeater.",}),"return":({"the object to inform of all events",}),]),}),"set_repeater_owner":({({"void",}),({({"object",}),"owner",}),(["main":({"This method sets the owner of the repeater.",}),"param":({"owner the object that owns the repeater",}),]),}),"repeat_event_exit":({({"void",}),({({"object",}),"caller",({"object",}),"ob",({"string",}),"mess",({"object",}),"dest",}),(["main":({"This is called on the repeater object to process the actual messageevent_exit message.",}),"param":({"caller the repeater who sent the message","ob the object that did the event_say","mess the message string","exit where the object is going to",}),]),}),"repeat_event_person_say":({({"void",}),({({"object",}),"caller",({"object",}),"ob",({"string",}),"start",({"string",}),"mess",({"string",}),"lang",}),(["main":({"This is called on the repeater object to process the actual messageevent_person_say message.",}),"param":({"caller the repeater who sent the message","ob the object that did the say","start the start string","mess the message string","lang the language the message is in",}),]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"This is used to repeat all events onto the object that requested it(excluding events from the object itself).  The methods it calls onthe repeater object are:<ul><li>repeat_event_person_say<li>repeat_event_emote<li>repeat_event_say<li>repeat_event_enter<li>repeat_event_exit</ul>",}),"started":({"Thu Sep 23 19:09:49 PDT 1999",}),"author":({"Pinkfish",}),])
define_docs ([])
includes ([])
class_docs ([])
file_name "/std/basic/repeater.c"
last_changed 1000719403
