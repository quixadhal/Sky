#/secure/handlers/autodoc/autodoc_file.c
public_functions (["query_auto_load_value":({({"mixed",}),({({"mapping",}),"map",({"string",}),"file_name",({"string",}),"tag",}),(["main":({"This method will attempt to read the tag value for the given name out ofthe auto load mapping.<p>This works backwards compatible with the old method of dealing with tagsand file names.",}),"param":({"map the auto load mapping","file_name the file name tag to use","tag the tag to use in the file name",}),"example":({"#define AUTO_LOAD_TAG \"object\"mapping init_dynamic_arg(mapping map) {   mapping map;   map = ::query_dynamic_auto_load();   map = add_auto_load_value(map, AUTO_LOAD_TAG, \"name\", name);} /* init_dynamic_arg() */",}),]),}),"add_auto_load_value":({({"mapping",}),({({"mapping",}),"map",({"string",}),"file_name",({"string",}),"tag",({"mixed",}),"value",}),(["main":({"This method adds a value into the auto load mapping.",}),"param":({"map the mapping to add to","file_name the file name tag of the object doing the adding","tag the tag name to be used","value the value to be stored with it.",}),"example":({"#define AUTO_LOAD_TAG \"object\"mapping query_dynamic_auto_load() {   mapping map;   map = ::query_dynamic_auto_load();   map = add_auto_load_value(map, AUTO_LOAD_TAG, \"name\", name);} /* query_dynamic_auto_load() */",}),]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"This file has generic methods of accessing auto load information.  Thiswill save memory and generaly be more useful than the previous version.It shoudl also solve a lot of the container in container problems,",}),"started":({"Wed Feb 17 13:46:35 PST 1999",}),"author":({"Pinkfish",}),])
define_docs ([])
includes ([])
class_docs ([])
file_name "/std/basic/auto_load.c"
last_changed 1000719383
