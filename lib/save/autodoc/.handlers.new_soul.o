#/secure/handlers/autodoc/autodoc_file.c
public_functions (["help_string":({({"string",}),({({"string",}),"verb",}),(["main":({"Returns the help string for the soul ocmmand.  Creates a nice helkpmessage for the passed soul command.",}),"param":({"verb the soul command to get help on",}),"return":({"the soul command help string",}),]),}),"save_it":({({"void",}),({}),(["main":({"Saves the current state of the soul object.",}),]),}),"query_soul_command":({({"mixed",}),({({"string",}),"name",}),(["main":({"This returns the arrays that are used by the patternmatcher in the player object. Called from inside add_command interface.",}),"see":({"/global/new_parse->add_command()",}),"param":({"name the souul command name to find",}),"return":({"0 if no command found, otherwise an array of patterns",}),]),}),"query_pcache_size":({({"int",}),({}),([]),}),"delete_soul_command":({({"void",}),({({"string",}),"name",}),(["main":({"Deletes the soul command.  This is used to remove soul commandsthat are no longer used.",}),"param":({"name the soul command name to delete",}),]),}),"clean_cache":({({"void",}),({}),([]),}),"add_soul_command":({({"void",}),({({"string",}),"name",({"mixed",}),"data",}),(["main":({"Adds in a soul command.  Only allows additions fromthe soul compiler.",}),"param":({"name the name of the soul command","data the data associated with the soul command",}),"see":({"/handlers/soul_compiler.c",}),]),}),"query_soul_commands":({({"string","*",}),({}),(["main":({"The name of all the soul commands.",}),"return":({"an array containing the names of all the soul commands",}),]),}),"stats":({({"mixed",}),({}),([]),}),"query_scache_size":({({"int",}),({}),([]),}),"do_force":({({"void",}),({({"mixed",}),"arr",}),(["main":({"Attempts to do the force on the player.",}),"param":({"arr the args used to force",}),]),}),"help_list":({({"string",}),({}),(["main":({"The list of soul comands in the look at soul function.",}),"return":({"the list of all the soul commands formated for the screen",}),]),}),"load_it":({({"void",}),({}),(["main":({"Loads the previous state of the soul object off the disc.",}),]),}),"command_control":({({"int",}),({({"string",}),"verb",({"object","*",}),"obs",({}),"string",({"string",}),"in_dir_match",({"string","*",}),"args",({"string",}),"pattern",}),(["main":({"The main soul handling bit.  This is called by the add_command codewhen a soul command is matched.",}),"param":({"verb the verb matched","obs the objects to do the soul command on","in_dir_match the name which was matched for the peoples names","args the values of the string and stuff","pattern the pattern which was matched.",}),"return":({"1 if the command succeeded, 0 if it failed",}),]),}),"query_soul_command_stuff":({({"mixed",}),({({"string",}),"str",}),(["main":({"Returns the data associated with soul command.Probably not very useful, but useful for debugging.",}),"param":({"str the soul command to get the data for",}),"return":({"the data associated with the soul command",}),]),}),])
protected_functions (["query_soul_command_data":({({"mixed",}),({({"string",}),"str",}),(["main":({"Used internally to get the soul command data.",}),"see":({"query_soul_command_stuff()",}),"param":({"str the soul command to get data for",}),"return":({"the soul command data",}),]),}),])
inherits ([])
main_docs (["main":({"The soul handler for Discworld.  Handles the soul definitions andthe mangling needed to print the output for the players.",}),"author":({"Pinkfish",}),])
define_docs (["POS_REST":([]),"PCACHE_MAX_SIZE":([]),"SAVE_FILE":([]),"POS_SELF":([]),"SCACHE_MAX_SIZE":([]),"POS_TARGET":([]),"SOUL_DATA_DIR":([]),"CLEAN_UP_DELAY":([]),])
includes (["/include/player.h":1036911799,"/include/user_parser.h":962428284,"/include/soul.h":962698560,"/include/playtesters.h":1020949410,])
class_docs ([])
file_name "/handlers/new_soul.c"
last_changed 1200761933
