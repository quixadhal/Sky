#/secure/handlers/autodoc/autodoc_file.c
public_functions (["query_quest_names":({({"string","*",}),({}),(["main":({"This method returns the names of all the quests.",}),"see":({"add_quest()","delete_quest()",}),"return":({"the names of all the quests",}),]),}),"save_quests":({({"void",}),({}),(["main":({"This method saves the current set of quests to the save file.",}),"see":({"load_quests()",}),]),}),"query_quest_status":({({"int",}),({({"string",}),"name",}),(["main":({"This method returns the status of a quest.",}),"param":({"the name of a quest",}),"return":({"1 for active, 0 for inactive.",}),]),}),"query_quest_stories":({({"string","*",}),({}),(["main":({"This method returns the stories of all the quests.",}),"see":({"add_quest()","delete_quest()",}),"return":({"the stories of all the quests",}),]),}),"quest_completed":({({"void",}),({({"string",}),"name",({"string",}),"quest",({"object",}),"prev_ob",}),(["main":({"This method should be called in the code when a quest is complete.",}),"see":({"add_quest()","delete_quest()",}),"param":({"name name of the player","quest the quest completed","prev_ob the object which completed the quest",}),]),}),"add_quest":({({"int",}),({({"string",}),"name",({"int",}),"level",({"int",}),"xp",({"string",}),"title",({"string",}),"story",}),(["main":({"This method adds a new quest into the system.  You only need to callthis ONCE.  The name of the quest must be unique.  The story iswhat can be seen in the players books about the player.",}),"see":({"delete_quest()","query_quest_level()","query_quest_title()","query_quest_story()",}),"param":({"name the name of the quest","level the level of the quest 0-100","title the title for finishing the quest, 0 for none","story the story about the quest",}),"return":({"1 if successful, 0 if not",}),]),}),"query_quest_story":({({"string",}),({({"string",}),"name",}),(["main":({"This method returns the story associated with the quest.",}),"see":({"add_quest()","set_quest_story()",}),"param":({"name of the quest",}),"return":({"the story of the quest",}),]),}),"change_quest_status":({({"int",}),({({"string",}),"name",}),(["main":({"Change the status of a quest from active to inactiveand vice versa.",}),"param":({"the name of a quest.",}),]),}),"query_quest_xp":({({"int",}),({({"string",}),"name",}),(["main":({"This method returns the xp reward of the quest.",}),"see":({"add_quest()","set_quest_xp()",}),"param":({"name the name of the quest",}),"return":({"the xp reward of the quest, -1 on failure",}),]),}),"load_quests":({({"void",}),({}),(["main":({"This method reloads the quests from the save file.",}),"see":({"save_quests()",}),]),}),"query_quest_title":({({"string",}),({({"string",}),"name",}),(["main":({"This method returns the title associated with the quest.",}),"see":({"add_quest()","set_quest_title()",}),"param":({"name of the quest",}),"return":({"the title of the quest",}),]),}),"query_quest_done":({({"mixed",}),({({"string",}),"name",}),(["main":({"This method returns the name of the last person to complete thequest.",}),"see":({"quest_completed()","add_quest()","query_quest_times()",}),"param":({"name thre name of the quest",}),"return":({"the last person to complete the quest",}),]),}),"query_quest_xps":({({"int","*",}),({}),(["main":({"This method returns the xp rewards of all the quests.",}),"see":({"add_quest()","delete_quest()",}),"return":({"the levels of all the quests",}),]),}),"query_quest_times":({({"int",}),({({"string",}),"name",}),(["main":({"This method returns the number of times the quest has beencompleted.",}),"see":({"quest_completed()","add_quest()","query_quest_done()",}),"param":({"name thre name of the quest",}),"return":({"the number of times completed",}),]),}),"query_fame_str":({({"string",}),({({"string",}),"name",}),(["main":({"This method returns a string associated with the fame level of theplayer.",}),"see":({"query_player_fame()","query_player_story()",}),"param":({"name the name of the player",}),"return":({"the fame string",}),]),}),"query_player_fame":({({"int",}),({({"string",}),"name",}),(["main":({"This method returns the fame of the player.Gets the fame percentage of the player. Quest points / total quest points",}),"see":({"query_player_story()","query_fame_string()","query_total_qp()",}),"param":({"name the name of the player",}),"return":({"the fame as a percentage (0-100)",}),]),}),"query_quest_level":({({"int",}),({({"string",}),"name",}),(["main":({"This method returns the level of the quest.",}),"see":({"add_quest()","set_quest_level()",}),"param":({"name the name of the quest",}),"return":({"the level of the quest, -1 on failure",}),]),}),"set_quest_story":({({"int",}),({({"string",}),"name",({"string",}),"story",}),(["main":({"This method sets the story associated with the quest.",}),"see":({"add_quest()","query_quest_story()",}),"param":({"name of the quest","story the new story of the quest",}),]),}),"set_quest_title":({({"int",}),({({"string",}),"name",({"string",}),"title",}),(["main":({"This method sets the title associated with the quest.",}),"see":({"add_quest()","query_quest_title()",}),"param":({"name of the quest","title the new title of the quest",}),]),}),"query_quest_levels":({({"int","*",}),({}),(["main":({"This method returns the levels of all the quests.",}),"see":({"add_quest()","delete_quest()",}),"return":({"the levels of all the quests",}),]),}),"query_quest_titles":({({"string","*",}),({}),(["main":({"This method returns the titles of all the quests.",}),"see":({"add_quest()","delete_quest()",}),"return":({"the titles of all the quests",}),]),}),"query_player_story":({({"string","*",}),({({"string",}),"name",}),(["main":({"This method lists the stories for the quests the player has done.",}),"see":({"query_fame_string()","query_player_fame()",}),"param":({"name the name of the player",}),"return":({"the story of the player",}),]),}),"query_total_qp":({({"int",}),({}),(["main":({"This returns the current total gp for all of the current quests.",}),"return":({"the total gp",}),]),}),"delete_quest":({({"int",}),({({"string",}),"name",}),(["main":({"This method removes the given quest from the system.",}),"see":({"name the name of the quest to remove","add_quest()",}),"return":({"0 on failure, 1 on success",}),]),}),"set_quest_xp":({({"int",}),({({"string",}),"name",({"int",}),"amount",}),(["main":({"This method sets the xp reward of the quest.",}),"see":({"add_quest()","query_quest_xp()",}),"param":({"name the name of the quest","amount the amount of xp reward of the quest",}),"return":({"0 on failure, 1 on success",}),]),}),"set_quest_level":({({"int",}),({({"string",}),"name",({"int",}),"level",}),(["main":({"This method sets the level of the quest.",}),"see":({"add_quest()","query_quest_level()",}),"param":({"name the name of the quest","level the level of the quest",}),"return":({"0 on failure, 1 on success",}),]),}),])
protected_functions ([])
inherits (["/std/object":({}),])
main_docs (["main":({"This class keeps track of the current set of quests availabe in thegame.",}),"author":({"Furball",}),])
define_docs (["SAVE_FILE":([]),"BACKUP_FILE":([]),"QUEST_LOG":([]),])
includes (["/include/library.h":962428284,])
class_docs ([])
file_name "/handlers/quest_handler.c"
last_changed 1021651435
