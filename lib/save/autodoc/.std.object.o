#/secure/handlers/autodoc/autodoc_file.c
public_functions (["set_material":({({"void",}),({({"string",}),"word",}),(["main":({"This method sets the material of the object.",}),"param":({"word the material to set it to",}),]),}),"query_colour":({({"string",}),({}),(["main":({"This method returns the colour of the object.",}),"return":({"the colour of the object",}),]),}),"query_cloned_by":({({"string",}),({}),(["main":({"Who cloned the object.  Used for security reasoin to trace who havebeen cloning up objects for players.",}),"return":({"the person who cloned the object",}),]),}),"set_name":({({"void",}),({({"string",}),"word",}),(["main":({"Gives the object a name.  Sets the name to the word and makes it theshort description  and attempts to create the pural short descriptionfrom it.",}),"param":({"name the name to use",}),]),}),"set_colour":({({"void",}),({({"string",}),"word",}),(["main":({"This method sets the colour of the object.",}),"param":({"word the colour to make the object",}),]),}),"query_possessive":({({"string",}),({}),(["main":({"The possessive of the object.",}),"return":({"returns \"its\" or \"their\"",}),]),}),"query_player":({({"object",}),({}),(["main":({"This method returns the player associated with the object.",}),"return":({"the player who loaded the object",}),]),}),"set_player":({({"void",}),({({"object",}),"thing",}),(["main":({"Sets the player associated with the object.  This is used during theautoload sequence.",}),"see":({"/global/auto_load.c",}),"param":({"thing the player object we belong to",}),]),}),"query_objective":({({"string",}),({}),(["main":({"The objective of the object.",}),"return":({"returns \"it\" or \"them\"",}),]),}),"query_pronoun":({({"string",}),({}),(["main":({"The pronoun of the object.",}),"return":({"returns \"it\" or \"they\"",}),]),}),"set_determinate":({({"void",}),({({"string",}),"str",}),(["main":({"This method adds a determinate to the object.Generally this should be set to \"the \" or \"\" for unique items,\"a \" or \"an \" for non-uniques.If no determinate is set for an object, a/an will be usedautomatically as needed.",}),"param":({"str the string to set as the determinate",}),]),}),"query_material":({({"string",}),({}),(["main":({"This method returns the material of the object.",}),"return":({"the name of the material",}),]),}),"long":({({"string",}),({({"string",}),"word",({"int",}),"dark",}),(["main":({"The description of an object when someone looks at it.  This hanedlesthe extra code for messages, colour and material.",}),"param":({"word the worc it was matched on","dark is it dark fom the players perspecitive",}),"return":({"the long description",}),]),}),])
protected_functions ([])
inherits (["/std/basic/id":({}),"/std/basic/enchant":({}),"/std/basic/help_files":({}),"/std/basic/property":({}),"/std/basic/auto_load":({}),"/std/basic/misc":({}),"/std/basic/extra_look":({}),"/std/basic/effects":({}),"/std/basic/read_desc":({}),])
main_docs (["changed":({"Many many times by many people","Added set_determinate() function - Shaydz - 04/03/2001","Changed to inherit the effects inheritable, instead ofusing a shadow for effects. - Sandoz, 11/04/03",}),"main":({"The basic object.  This pulls together all the bits needed to createa basic object.",}),"author":({"Pinkfish",}),"see":({"/std/room/basic_room.c",}),])
define_docs (["AUTO_LOAD_TAG":([]),])
includes (["/include/cmr.h":962428284,])
class_docs ([])
file_name "/std/object.c"
last_changed 1072124245
