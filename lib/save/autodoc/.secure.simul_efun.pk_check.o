#/secure/handlers/autodoc/autodoc_file.c
public_functions (["channel_silenced":({({"int",}),({({"object",}),"ob",}),([]),}),"silenced":({({"int",}),({({"object",}),"ob",}),([]),}),"pk_check":({({"int",}),({({"mixed",}),"thing1",({"mixed",}),"thing2",({"int",}),"off_line",}),(["main":({"This method checks to see if both of the objects are able to do apk action on each other.  This will return 1 if they cannotcomplete the action, ie: either of them are not player killers.It will take an object or a string as the first parameter and attemptto check for pkness, if the off_line flag is set it will even check forplayers that are not even logged on.<p>If an object is passed into this method, it is first checked with themethod query_owner_pk_check(), if this returns a non-zero value it isused as the person who owns the object.  This allows objects to bepk checked when they are not players.",}),"param":({"thing1 first object to check","thing2 second object to check","off_line allow the check to occur if they are not logged on",}),"return":({"1 if they cannot attack each other",}),]),}),])
protected_functions ([])
inherits ([])
main_docs (["main":({"Contains some simul_efuns.",}),"author":({"Pinkfish",}),])
define_docs ([])
includes (["/include/player.h":1036911799,"/include/playtesters.h":1020949410,])
class_docs ([])
file_name "/secure/simul_efun/pk_check.c"
last_changed 1053253368
