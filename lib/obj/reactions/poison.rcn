::item "GroundVenom" "Water"::
::->ratio:: 1.0/400
::->result:: LIQUID_OBJ
::->result_amt:: 1.0
::->func:: ({
        (: $3->set_name("poison") :),
        (: $3->set_short("deadly poison") :),
        (: $3->set_long("This is a pale coloured tea, $pile_size$.") :),
        (: $3->set_medium_alias("VenomPoison") :),
        (: $3->add_eat_effect("/std/effects/ingested/basic_healing",
                this_player()->query_skill_bonus(
                        "magic.methods.physical.brewing")/10)
        :)
    })

::item "VenomPoison" "GroundCatalyst"::
::->ratio:: ({ 400.0, 2400.0 })
::->result:: LIQUID_OBJ
::->result_amt:: 1.0
::->func:: ({
        (: $3->set_name("poison") :),
        (: $3->set_short("deadly poison") :),
        (: $3->set_long("This is a pale coloured tea, $pile_size$.") :),
        (: $3->set_medium_alias("VenomCatalystPoison") :),
# I wanted this to be based on the amount added, but there's a bug...
        (: $3->add_eat_effect("/std/effects/ingested/basic_healing",
                $1->query_eat_effects()["/std/effects/ingested/basic_healing"]
                  * this_player()->query_skill_bonus(
                        "magic.methods.physical.brewing")/10)
        :)
    })


::item "PoisonFang" "Water"::
::->ratio:: 1.0/400
::->result:: LIQUID_OBJ
::->result_amt:: 1.0
::->func:: ({
        (: $3->set_name("poison") :),
        (: $3->set_short("deadly poison") :),
        (: $3->set_long("This is a pale coloured tea, $pile_size$.") :),
        (: $3->set_medium_alias("FangExtract") :),
        (: $3->add_eat_effect("/std/effects/ingested/basic_healing",
                this_player()->query_skill_bonus(
                        "magic.methods.physical.brewing")/10)
        :)
    })

::item "FangExtract" "PoisonLeaf"::
::->ratio:: ({ 400.0, 2400.0 })
::->result:: LIQUID_OBJ
::->result_amt:: 1.0
::->func:: ({
        (: $3->set_name("poison") :),
        (: $3->set_short("deadly poison") :),
        (: $3->set_long("This is a pale coloured tea, $pile_size$.") :),
        (: $3->set_medium_alias("FangLeafPoison") :),
# I wanted this to be based on the amount added, but there's a bug...
        (: $3->add_eat_effect("/std/effects/poisons/spider_venom",
                $1->query_eat_effects()["/std/effects/poisons/spider_venom"]
                  * this_player()->query_skill_bonus(
                        "covert.items.poisons")/10)
        :)
    })
