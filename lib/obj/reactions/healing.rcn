::item "GroundComfrey" "Water"::
::->ratio:: 1.0/400
::->result:: LIQUID_OBJ
::->result_amt:: 1.0
::->func:: ({
        (: $3->set_name("tea") :),
        (: $3->set_short("pale tea") :),
        (: $3->set_long("This is a pale coloured tea, $pile_size$.") :),
        (: $3->set_medium_alias("ComfreyTea") :),
        (: $3->add_eat_effect("/std/effects/ingested/basic_healing",
                this_player()->query_skill_bonus(
                        "magic.methods.physical.brewing")/10)
        :)
    })

::item "ComfreyTea" "GroundYarrow"::
::->ratio:: ({ 400.0, 2400.0 })
::->result:: LIQUID_OBJ
::->result_amt:: 1.0
::->func:: ({
        (: $3->set_name("tea") :),
        (: $3->set_short("pale tea") :),
        (: $3->set_long("This is a pale coloured tea, $pile_size$.") :),
        (: $3->set_medium_alias("ComfreyYarrowTea") :),
# I wanted this to be based on the amount added, but there's a bug...
        (: $3->add_eat_effect("/std/effects/ingested/basic_healing",
                $1->query_eat_effects()["/std/effects/ingested/basic_healing"]
                  * this_player()->query_skill_bonus(
                        "magic.methods.physical.brewing")/10)
        :)
    })
